# scene:
#     animated: true
#     background:

sources:
    osm:
        type: TopoJSONTiles
        url:  //vector.mapzen.com/osm/all/{z}/{x}/{y}.topojson?api_key=vector-tiles-HqUVidw

cameras:
    camera1:
        type: isometric
        axis: [1, 1]

lights:
    sun:
        type: directional
        direction: [0, 1, -.5]
        diffuse: [1, 1, 1]
        ambient: .5
    moon:
        type: directional
        direction: [0, 1, -.5]
        diffuse: [0, 0, .5]
        ambient: .2

scene:
    properties:
        speed: 10000
    update: |
        function daycycle() {
            var t = +new Date() / properties.speed;

            var x = Math.sin(t);
            var y = Math.sin(t+(3.14159/2)); // 1/4 offset
            var px = Math.min(x, 0); // positive x
            var py = Math.min(y, 0); // positive y

            camera.axis = {x: x, y: y};

            // offset blue and red for sunset and moonlight effect
            var B = x + Math.abs(Math.sin(t+(3.14159*.5)))/4;
            var R = y + Math.abs(Math.sin(t*2))/4;
            lights.sun.diffuse = [R, y, B, 1];
            lights.sun.direction = [x, 1, -.5];

            // light up the roads at night
            styles.roads.material.emission.amount = [-py, -py, -py, 1];

            // turn water black at night
            styles.water.material.ambient.amount = [py+1, py+1, py+1, 1];
            styles.water.material.diffuse.amount = [py+1, py+1, py+1, 1];

            // turn up buildings ambient response at night
            var ba = -py*.75+.75;
            styles.buildings.material.ambient.amount = [ba, ba, ba, 1];
        }

styles:
    roads:
        base: lines
        material:
            diffuse: 1
            emission: 1
    water:
        base: polygons
        material:
            diffuse: 1
            ambient: 1
    buildings:
        base: polygons
        material:
            diffuse: 1
            ambient: 1

layers:
    earth:
        data: { source: osm }
        draw:
            polygons:
                order: 0
                color: '#ddeeee'

    landuse:
        data: { source: osm }
        draw:
            polygons:
                order: 1
                color: '#aaddaa'

    water:
        data: { source: osm }
        draw:
            polygons:
                style: water
                order: 2
                color: '#88bbee'

    roads:
        data: { source: osm }
        filter:
            not: { kind: ["path", "rail"] }
        draw:
            lines:
                order: 4
                color: gray
                width: 8
                cap: round
        highway:
            filter:
                kind: highway
            draw:
                lines:
                    order: 5
                    color: '#cc6666'
                    width: 12
                    outline:
                        color: grey
                        width: 1.5
        minor_road:
            filter:
                kind: minor_road
            draw:
                lines:
                    order: 3
                    color: lightgrey
                    width: 5

    buildings:
        data: { source: osm }
        draw:
            polygons:
                order: 6
                color: |
                    function () {
                        var h = feature.height || 20;
                        h = Math.min((h + 50)/ 255, .8); // max brightness: .8
                        h = Math.max(h, .4); // min brightness: .4
                        return [h, h, h];
                    }
        3d-buildings:
            filter: { $zoom: { min: 15 } }
            draw:
                polygons:
                    extrude: function () { return feature.height > 20 || $zoom >= 16; }
